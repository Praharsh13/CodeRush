// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Making model

enum UserRole {
  ADMIN
  USER
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model User {
  id                     String   @id @default(uuid())
  username               String?
  email                  String   @unique
  isEmailVerified        Boolean?
  emailVerificationToken String?
  forgotPasswordToken    String?
  forgotPasswordExpiry   String?
  avatar                 Json?
  role                   UserRole @default(USER)
  password               String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  //Creating one-to-many Relationships
  problems Problem[]
}

//Creating Problem model
model Problem {
  id                String     @id @default(uuid())
  title             String
  description       String
  difficulty        Difficulty
  tags              String[] //["Tag1","Tag2","Tag3"]
  userId            String
  example           Json
  constraints       String
  hints             String?
  editorial         String?
  testcases         Json
  codeSnippets      Json
  referenceSolution Json
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  //Relationships
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
